// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0

package models

import (
	"context"

	"github.com/google/uuid"
)

type Querier interface {
	AddArtistToEvent(ctx context.Context, arg AddArtistToEventParams) error
	CreateArtist(ctx context.Context, arg CreateArtistParams) (Artist, error)
	CreateEvent(ctx context.Context, arg CreateEventParams) (Event, error)
	CreateImage(ctx context.Context, arg CreateImageParams) (Image, error)
	CreateReferenceLink(ctx context.Context, arg CreateReferenceLinkParams) (ReferenceLink, error)
	CreateUser(ctx context.Context, arg CreateUserParams) (User, error)
	CreateUserSession(ctx context.Context, arg CreateUserSessionParams) (UserSession, error)
	DeleteEvent(ctx context.Context, id uuid.UUID) error
	DeleteReferenceLink(ctx context.Context, id uuid.UUID) (ReferenceLink, error)
	ExpireUserSession(ctx context.Context, id uuid.UUID) error
	GetAllArtists(ctx context.Context) ([]GetAllArtistsRow, error)
	GetAllEvents(ctx context.Context) ([]GetAllEventsRow, error)
	GetArtistByID(ctx context.Context, id uuid.UUID) (GetArtistByIDRow, error)
	GetArtistsByTitle(ctx context.Context, arg GetArtistsByTitleParams) ([]GetArtistsByTitleRow, error)
	GetEventByID(ctx context.Context, id uuid.UUID) (GetEventByIDRow, error)
	GetImageByID(ctx context.Context, id uuid.UUID) (GetImageByIDRow, error)
	GetReferenceLinkByID(ctx context.Context, id uuid.UUID) (GetReferenceLinkByIDRow, error)
	GetReferenceLinkByToken(ctx context.Context, token string) (GetReferenceLinkByTokenRow, error)
	GetUserByEmail(ctx context.Context, email string) (GetUserByEmailRow, error)
	GetUserByHandle(ctx context.Context, userHandle string) (GetUserByHandleRow, error)
	GetUserByID(ctx context.Context, id uuid.UUID) (GetUserByIDRow, error)
	GetUserBySessionToken(ctx context.Context, token string) (GetUserBySessionTokenRow, error)
	RemoveArtistFromEvent(ctx context.Context, arg RemoveArtistFromEventParams) error
	SetAvatarImage(ctx context.Context, arg SetAvatarImageParams) (User, error)
	TimeSlotsByEventID(ctx context.Context, eventID uuid.UUID) ([]TimeSlotsByEventIDRow, error)
	UpdateArtist(ctx context.Context, arg UpdateArtistParams) (Artist, error)
	UpdateEvent(ctx context.Context, arg UpdateEventParams) (Event, error)
	UpdateUser(ctx context.Context, arg UpdateUserParams) (User, error)
}

var _ Querier = (*Queries)(nil)
